kube-prometheus-stack:
  prometheusOperator:
    enabled: true
    createCustomResource: true
    admissionWebhooks:
      enabled: true

      annotations:
        argocd.argoproj.io/hook: PreSync
        argocd.argoproj.io/hook-delete-policy: HookFailed

      patch:
        annotations:
          argocd.argoproj.io/hook: PreSync
          argocd.argoproj.io/hook-delete-policy: HookFailed

      mutatingWebhookConfiguration:
        annotations:
          argocd.argoproj.io/hook: PreSync

      validatingWebhookConfiguration:
        annotations:
          argocd.argoproj.io/hook: PreSync

  grafana:
    enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        external-dns.alpha.kubernetes.io/hostname: grafana.workquark.org
        external-dns.alpha.kubernetes.io/target: 2f781e1f-bbaa-472d-a5ea-bb89b7dc5f02.cfargotunnel.com"
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      labels: {}
      hosts:
      - grafana.172.18.0.0.nip.io
      - grafana.workquark.org
      path: /
      tls:
      - secretName: grafana-general-tls
        hosts:
        - grafana.workquark.org
      # # To make Grafana persistent (Using Statefulset)
      # #
      # persistence:
      #   enabled: true
      #   type: sts
      #   storageClassName: "storageClassName"
      #   accessModes:
      #     - ReadWriteOnce
      #   size: 20Gi
      #   finalizers:
      #     - kubernetes.io/pvc-protection

  prometheus-node-exporter:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: role
              operator: In
              values:
              - worker

  prometheus:
    annotations:
      argocd.argoproj.io/ignore-healthcheck: "true"
      argocd.argoproj.io/skip-health-check: "true" # https://github.com/argoproj/argo-cd/issues/11261
    prometheusSpec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - worker

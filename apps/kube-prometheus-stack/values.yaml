kube-prometheus-stack:
  prometheusOperator:
    enabled: true
    createCustomResource: true
    admissionWebhooks:
      enabled: true

      annotations:
        argocd.argoproj.io/hook: PreSync
        argocd.argoproj.io/hook-delete-policy: HookFailed

      patch:
        annotations:
          argocd.argoproj.io/hook: PreSync
          argocd.argoproj.io/hook-delete-policy: HookFailed

      mutatingWebhookConfiguration:
        annotations:
          argocd.argoproj.io/hook: PreSync

      validatingWebhookConfiguration:
        annotations:
          argocd.argoproj.io/hook: PreSync

  grafana:
    enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      labels: {}
      hosts: 
        - grafana.172.18.0.0.nip.io
      path: /
      # tls: []
      # - secretName: grafana-general-tls
      #   hosts:
      #   - grafana.example.com

    # # To make Grafana persistent (Using Statefulset)
    # #
    # persistence:
    #   enabled: true
    #   type: sts
    #   storageClassName: "storageClassName"
    #   accessModes:
    #     - ReadWriteOnce
    #   size: 20Gi
    #   finalizers:
    #     - kubernetes.io/pvc-protection

  prometheus-node-exporter:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: role
                  operator: In
                  values:
                  - worker

  prometheus:
    annotations:
      argocd.argoproj.io/skip-health-check: 'true' # https://github.com/argoproj/argo-cd/issues/11261
    prometheusSpec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: role
                operator: In
                values:
                - worker
version: '3'

tasks:
  create_cluster:
    desc: Build the project
    dir: ./kind
    cmds:
    - kind create cluster --name quick-start --config=kind.cfg

  install-repos:
    desc: install all helm chart repos
    cmds:
    - helm repo add metallb https://metallb.github.io/metallb
    - helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
    - helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
    - helm repo add minio https://charts.min.io/
    - helm repo add grafana https://grafana.github.io/helm-charts
    - helm repo add openebs https://openebs.github.io/openebs
    - helm repo add vector https://helm.vector.dev
    - helm repo update

  install-metallb-manifests:
    desc: Install metallb manifests
    dir: metallb
    cmds:
    - kubectl create namespace metallb-system --dry-run=client -o yaml | kubectl apply -f -
    - kubectl apply -f metallb-manifests.yaml

  install-loki-secrets:
    desc: Install loki secrets
    dir: loki
    cmds:
    - kubectl create namespace loki --dry-run=client -o yaml | kubectl apply -f -
    # - kubectl create secret generic loki-basic-auth --from-file=.htpasswd -n loki
    # - kubectl create secret generic canary-basic-auth --from-literal=username=loki --from-literal=password=password -n loki
    - |
      SECRET_NAME="loki-basic-auth"
      NAMESPACE="loki"

      if ! kubectl get secret "$SECRET_NAME" -n "$NAMESPACE" > /dev/null 2>&1; then
        echo "Creating secret..."
        kubectl create secret generic $SECRET_NAME --from-file=.htpasswd -n $NAMESPACE
      else
        echo "Secret '$SECRET_NAME' already exists in namespace '$NAMESPACE'."
      fi
    - |
      SECRET_NAME="canary-basic-auth"
      NAMESPACE="loki"

      if ! kubectl get secret "$SECRET_NAME" -n "$NAMESPACE" > /dev/null 2>&1; then
        echo "Creating secret..."
        kubectl create secret generic $SECRET_NAME --from-literal=username=loki --from-literal=password=password -n $NAMESPACE
      else
        echo "Secret '$SECRET_NAME' already exists in namespace '$NAMESPACE'."
      fi

  install-metallb:
    desc: Install metallb in namespace metallb-system
    dir: metallb
    cmds:
    - helm upgrade -i metallb metallb/metallb -n metallb-system --create-namespace --wait

  install-ingress-nginx:
    desc: Install ingress-nginx controller in ingress-nginx namespace
    dir: nginx-ingress
    cmds:
    - helm upgrade -i ingress-nginx ingress-nginx/ingress-nginx -f values.yaml -n ingress-nginx --create-namespace --wait

  install-kube-prometheus-stack:
    desc: Install kube-prometheus-stack
    dir: kube-prometheus-stack
    cmds:
    - helm upgrade -i grafana-prom-stack prometheus-community/kube-prometheus-stack -f values.yaml -n kube-prometheus-stack --create-namespace --wait

  install-openebs:
    desc: Install openebs storage solution
    dir: openebs
    cmds:
    - helm upgrade -i openebs openebs/openebs -n openebs --create-namespace -f values.yaml --wait

  install-standalone-minio:
    desc: Install standalone minio
    dir: minio/standalone
    cmds:
    - helm upgrade -i minio minio/minio -n minio --create-namespace -f values.yaml --wait

  install-loki:
    desc: Install loki
    dir: loki
    cmds:
    - helm dep up
    - helm upgrade -i loki . -n loki --create-namespace --wait -f values.yaml

  install-vector:
    desc: Install vector
    dir: vector
    cmds:
    - helm upgrade -i vector vector/vector -n vector --create-namespace -f values.yaml
  deploy:
    desc: bootstrapping installations
    deps:
    - install-metallb
    - install-ingress-nginx
    - install-kube-prometheus-stack
    - install-openebs
    # - install-standalone-minio
    - install-loki-secrets
    # - install-loki
    cmds:
    - echo "Finished installing helm charts"

  destroy:
    desc: destroy all helm installations
    cmds:
    - helm list --all-namespaces | grep -q 'ingress-nginx' && helm uninstall ingress-nginx -n ingress-nginx || echo "Release 'ingress-nginx' does not exist."
    - helm list --all-namespaces | grep -q 'grafana-prom-stack' && helm uninstall grafana-prom-stack -n kube-prometheus-stack || echo "Release 'grafana-prom-stack' does not exist."
    - helm list --all-namespaces | grep -q 'openebs' && helm uninstall openebs -n openebs || echo "Release 'openebs' does not exist."
    - helm list --all-namespaces | grep -q 'loki' && helm uninstall loki -n loki || echo "Release 'loki' does not exist."
